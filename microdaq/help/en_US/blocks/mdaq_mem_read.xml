<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xmlns:svg="http://www.w3.org/2000/svg" 
xmlns:ns5="http://www.w3.org/1999/xhtml" 
xmlns:mml="http://www.w3.org/1998/Math/MathML" 
xmlns:db="http://docbook.org/ns/docbook" 
version="5.0-subset Scilab" 
xml:id="mdaq_mem_read">
    <refnamediv>
        <refname>mdaq_mem_read</refname>
        <refpurpose>
		
		Reads MicroDAQ memory
		
		</refpurpose>
    </refnamediv>
	
	 <refsection>
        <title>Block Screenshot</title>
        <para>
            <inlinemediaobject>
                <imageobject>
                    <imagedata align="center" fileref="../../../images/gif/mdaq_mem_read.gif" valign="middle"/>
                </imageobject>
            </inlinemediaobject>
        </para>
    </refsection>
	
    <refsection id="Description_mdaq_mem_read">
        <title>Description</title>	
		<para>
		This block reads MicroDAQ volatile memory. Block can be used 
		to pass data to Standalone or Ext application generated from
		Xcos diagram. 
		</para>

		<para>
		In order to write data (which will be read by this block) mdaqMemWrite() toolbox function can be used.
		</para>
    </refsection>
	
	<refsection id="Dialogbox_mdaq_mem_read">
        <title>Dialog box</title>
        <para>
            <inlinemediaobject>
                <imageobject>
                    <imagedata align="center" fileref="../../../help/en_US/images/mem_read_params.png" valign="middle"/>
                </imageobject>
            </inlinemediaobject>
        </para>
        <itemizedlist>
            <listitem>
                <para>
                    <emphasis role="bold">Start index</emphasis>
                </para>
                <para>Points to beginning of memory area.</para>
                <para>Properties : Type int, range 1-250000.</para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">Number of vectors</emphasis>
                </para>
                <para>
                    Defines overall size of the memory which block reads data from. That size can be calculated with the formula:
                    Number of vectors * Vector Size.
                </para>
                <para>Properties : Type int, range 1-(250000/Vector size).</para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">Vector size</emphasis>
                </para>
                <para>
                     Defines size of signal read by block.
                </para>
                <para>Properties : Type int, range 1-10000.</para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">Init value</emphasis>
                </para>
                <para>
                   Allows the user to initialize memory with the provided value in Mode=1 and Mode=2. If a single number is provided then whole memory will be initialized with that number. 
                   Otherwise lenght of <emphasis role="bold">Init value vector</emphasis> has to be equal to <emphasis role="bold">(Vector size * Number of vectors)</emphasis>.
                   
				   <para>Example usage:</para>
				   <para>Number of vectors: 2, Vector size: 3, Init value: 3.14    - result: memory = [3.14 3.14 3.14 3.14 3.14 3.14]</para>
				   <para>Number of vectors: 2, Vector size: 3, Init value: [1 2 3 4 5 6]    - result: memory = [1 2 3 4 5 6]</para>
                </para>
                <para>Properties : Type float or vector.</para>
            </listitem>
			<listitem>
                <para>
                    <emphasis role="bold">Mode</emphasis>
                </para>
                <para>
                    Determines how data will be read - 
					if "circular read" is enabled (value 1,3) block returns data in every 
					model step, if the end of memory region is reached blocks starts from 
					beginning of the memory area. If 'single read' (value 0,2) is enabled block 
					returns data in every model step, if the end of memory region is reached 
					block returns value from the end of memory region.
					<para>Values:</para>
					<para>0 - single read, ignore init value.</para>
					<para>1 - circular read, use init value.</para>
					<para>2 - single read, use init value.</para>
					<para>3 - circular read, ignore init value.</para>
                </para>
                <para>Properties : Type int, range 0-3.</para>
            </listitem>
			<listitem>
                <para>
                    <emphasis role="bold">Trigger input</emphasis>
                </para>
                <para>
                   If input is enabled (value 1), rising edge on trigger input will reset data
				   index to index 0, block will reads data from the beginning. 
                </para>
                <para>Properties : Type int, 0 or 1.</para>
            </listitem>
        </itemizedlist>
    </refsection>
   
	<refsection id="SeeAlso_mdaq_dio_set">
        <title>See Also</title>
        <simplelist type="inline">
			<member> <link linkend="mdaq_mem_write">mdaq_mem_write</link> : Writes data to MicroDAQ memory</member>
			<member> <link linkend="mdaqMemWrite">mdaqMemWrite</link> : Writes data to MicroDAQ memory</member>
        </simplelist>
    </refsection>
</refentry>
