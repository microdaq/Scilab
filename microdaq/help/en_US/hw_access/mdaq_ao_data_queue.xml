<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:id="mdaq_ao_data_queue">
	<refnamediv>
		<refname>mdaq_ao_data_queue</refname>
		<refpurpose>Loads data to AO buffer in continuous mode</refpurpose>
	</refnamediv>
	
	<refsynopsisdiv>
		<title>Calling Sequence</title>
		<synopsis>
			mdaq_ao_data_queue(link_id, data, blocking);
			mdaq_ao_data_queue(data, blocking);
		</synopsis>
	</refsynopsisdiv>
	
	<refsection id="Description_mdaq_ao_data_queue">
		<title>Description</title>
		<para>
			Loads data to AO buffer in continuous mode. This step have to be done before start scanning. 
			If blocking option is enabled function will watis for 1 sec (AO timeout in continuous) until buffer AO is free, 
			otherwise an error will be returned.
        </para> 
		
		<orderedlist>
			<listitem>
				<para>INIT - <link linkend="mdaq_ao_scan_init">mdaq_ao_scan_init()</link></para>
			</listitem>
			<listitem>
				<para><emphasis role="bold">LOAD INIT DATA</emphasis> - <link linkend="mdaq_ao_data_update">mdaq_ao_data_update()</link>, <link linkend="mdaq_ao_data_queue">mdaq_ao_data_queue()</link></para>
			</listitem>
			<listitem>
				<para>START SCAN - <link linkend="mdaq_ao_scan">mdaq_ao_scan()</link></para>
			</listitem>
			<listitem>
				<para><emphasis role="bold">UPDATE DATA</emphasis> - <link linkend="mdaq_ao_data_update">mdaq_ao_data_update()</link>, <link linkend="mdaq_ao_data_queue">mdaq_ao_data_queue()</link></para>
			</listitem>
			<listitem>
				<para>STOP SCAN - <link linkend="mdaq_ao_scan_stop">mdaq_ao_scan_stop()</link></para>
			</listitem>
		</orderedlist> 
	</refsection>  
  
	<refsection id="Parameters_mdaq_ao_data_queue">
		<title>Parameters</title>
		<itemizedlist>
			<listitem><para><emphasis role="bold">link_id: </emphasis> Valid connection link ID (optional)</para></listitem>
			<listitem><para><emphasis role="bold">data: </emphasis> AO channels data in column order</para></listitem>
			<listitem><para><emphasis role="bold">blocking:  </emphasis>  Blocking mode (%F / %T)</para></listitem>
		</itemizedlist>
	</refsection>
	
	<refsection>
        <title>Examples</title>
        <para> Getting function usage description </para>

        <programlisting role="example"><![CDATA[
mdaq_ao_data_queue
 ]]></programlisting>
        <para> 
		This example generates changing (during scan process) sine waveform on AO channel 1 and triangle waveform on AO channel 2 for 5 sec. 
		Note that all data is uploaded throuth one function call and have to be organised in column order (column per channel).
		Functions are called without link_id.
		</para>
        <programlisting role="example"><![CDATA[
//scan params 
frequency = 1000; // 1 kHz
time = 5;         // 5 sec 

//generate dataset 
ch_data_size = 1000;
ref_triangle = linspace(0, 1, ch_data_size);
ref_sinus = sin(linspace(0, 2*%pi, ch_data_size));
sinus_bias = 2.5;
exp_val = -3.0;

//count of dataset to provide 
n = (frequency*time)/ch_data_size;

//init scan and load first dataset in column order for 
//each channel in countinuous mode
mdaq_ao_scan_init([1:2], 1, %T, 0, frequency, time);
    exp_wave = exp(linspace(exp_val, exp_val+0.8, ch_data_size));
    sine_wave = ref_sinus. * exp_wave  + sinus_bias;
    trianlge_wave = ref_triangle. * exp_wave;
    
    mdaq_ao_data_queue([sine_wave; trianlge_wave]', %T);
	
//run scan 
mdaq_ao_scan();

//load next dataset on the fly
for i=1:n-1   
    exp_val = exp_val+0.8;
    exp_wave = exp(linspace(exp_val, exp_val+0.8, ch_data_size));
    sine_wave = ref_sinus. * exp_wave + sinus_bias;
    trianlge_wave = ref_triangle. * exp_wave;
    
    mdaq_ao_data_queue([sine_wave; trianlge_wave]', %T);
end


 ]]></programlisting>
<para>
	Results:
	<imagedata align="center" fileref="..\images\cotinuous_waveforms.png" valign="middle"/>
</para>
    </refsection>
	
  <refsection id="SeeAlso_mdaq_ao_data_queue">
		<title>See Also</title>
		<simplelist type="inline">
			<member><link linkend="mdaq_ao_scan_init">mdaq_ao_scan_init</link></member>
			<member><link linkend="mdaq_ao_data_update">mdaq_ao_data_update</link></member>
			<member><link linkend="mdaq_ao_scan_stop">mdaq_ao_scan_stop</link></member>
			<member><link linkend="mdaq_ao_scan">mdaq_ao_scan</link></member>
			<member><link linkend="mdaq_ao_scan_examples">AO scan - examples</link></member>
		</simplelist>
  </refsection>
</refentry>
