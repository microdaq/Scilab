<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:id="mdaq_ai_read">
	<refnamediv>
		<refname>mdaq_ai_read</refname>
		<refpurpose>Reads analog inputs</refpurpose>
	</refnamediv>
	
	<refsynopsisdiv>
		<title>Calling Sequence</title>
		<synopsis>
			data = mdaq_ai_read(channels, range, differential);
			data = mdaq_ai_read(linkId, channels, range, differential);
		</synopsis>
	</refsynopsisdiv>
	
	<refsection id="Description_mdaq_ai_read">
		<title>Description</title>
		<para>
			This function returns immediately acquired values from MicroDAQ input channels as a 1-by-n array of doubles. The value is stored in data, where n is the number of input channels. The channels parameter can be a scalar or vector and it should contain channels numbers according to MicroDAQ hardware configuration. The range argument specifies channel measurement input range. Scalar or vector (if applicable for MicroDAQ hardware configuration) can be provided. If scalar provided, its value will be used for all used channels. In order to obtain supported ranges by device <link linkend="mdaq_ai_read">mdaq_ai_read()</link> function shall be called without arguments. The differential argument specifies measurement mode - differential or single-ended. This argument can be scalar or vector (if applicable for MicroDAQ hardware configuration). If scalar provided, its value will be used for all used channels.</para>
        <para> 
			For function usage description call function without arguments.  
		</para>
	</refsection>  
  
	<refsection id="Parameters_mdaq_ai_read">
		<title>Input arguments</title>
		<itemizedlist>
			<listitem><para><emphasis role="bold">linkID: </emphasis> Valid connection link id (optional)</para></listitem>
			<listitem><para><emphasis role="bold">channels: </emphasis> Scalar or vector with channels to be read</para></listitem>
            <listitem><para><emphasis role="bold">range: </emphasis> Scalar or vector with ranges</para></listitem>
			<listitem><para><emphasis role="bold">differential: </emphasis> Scalar or vector with measurement mode settings: %T - differential, %F - single-ended mode</para></listitem>
		</itemizedlist>
	</refsection>

	<refsection id="out_Parameters_mdaq_ai_read">
		<title>Output arguments</title>
		<itemizedlist>
			<listitem><para><emphasis role="bold">data:  </emphasis> Values of acquired data</para></listitem>
		</itemizedlist>
	</refsection>
    <para>
		Analog input channel selection in differential mode: 
		<simplelist type="inline">
            <member><para>Channel 1 - AI1(+), AI2(-)</para></member>
            <member><para>Channel 2 - AI3(+), AI4(-)</para></member>
            <member><para>Channel 3 - AI5(+), AI6(-)</para></member>
            <member><para>Channel 4 - AI7(+), AI8(-)</para></member>
            <member><para>Channel 5 - AI9(+), AI10(-)</para></member>
            <member><para>Channel 6 - AI11(+), AI12(-)</para></member>
            <member><para>Channel 7 - AI13(+), AI14(-)</para></member>
            <member><para>Channel 8 - AI15(+), AI16(-)</para></member>
			</simplelist>
    </para>
	
	<refsection>
        <title>Examples</title>

        <para> Read 8 single-ended channels with same channel input rage</para>
        <programlisting role="example"><![CDATA[
data = mdaq_ai_read(1:8, 1, %F);
mprintf("data: %f %f %f %f %f %f %f %f \n", data) 
 ]]></programlisting>

        <para> Read 4 single-ended channels with different channel input rage</para>
		<para>NOTE: Example will work if applicable for MicroDAQ analog input configuration</para>
        <programlisting role="example"><![CDATA[
data = mdaq_ai_read(1:4, [ 1 2 1 3], %F);
mprintf("data: %f %f %f %f\n", data) 
 ]]></programlisting>

        <para> Read 1 differential channel, 2 single-ended channels with different channel input rage</para>
		<para>NOTE: Example will work if applicable for MicroDAQ analog input configuration</para>
        <programlisting role="example"><![CDATA[
data = mdaq_ai_read([1 3 4], [1 2 1], [%T %F %F]);
mprintf("data: %f %f %f\n", data) 
 ]]></programlisting>
 
        <para>Performance comparison with and without linkId parameter</para>
        <programlisting role="example"><![CDATA[
// mdaq_ai_read usage example with and wihtout linkID parameter
tic();
for i = 1:10
    mdaq_ai_read(1,1,%F);
end
read_time = toc();
mprintf("\nExecution time for ten mdaq_ai_read() call without linkId: \t%fs \n", read_time);

// Create connection with MicroDAQ beafore mdaq_ai_read() call
linkID = mdaq_open(); 
tic();
for i = 1:10
    mdaq_ai_read(linkID,1,1,%F);
end
read_time = toc();
mdaq_close(linkID);
mprintf("Execution time for ten mdaq_ai_read() call with linkId: \t%fs\n", read_time);
 ]]></programlisting>

 
    </refsection>
	
  <refsection id="SeeAlso_mdaq_ai_read">
		<title>See Also</title>
		<simplelist type="inline">
			<member><link linkend="mdaq_ao_write">mdaq_ao_write</link></member>
		</simplelist>
  </refsection>
</refentry>
