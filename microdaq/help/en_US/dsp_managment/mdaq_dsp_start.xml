<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xmlns:svg="http://www.w3.org/2000/svg" 
xmlns:ns5="http://www.w3.org/1999/xhtml" 
xmlns:mml="http://www.w3.org/1998/Math/MathML" 
xmlns:db="http://docbook.org/ns/docbook" 
version="5.0-subset Scilab" 
xml:id="mdaqDSPStart">
  <refnamediv>
    <refname>mdaqDSPStart</refname>
    <refpurpose>Starts DSP application on MicroDAQ</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
	<title>Description</title>
	<para>This function loads and starts DSP application generated from Xcos diagram. User hast to provide two parameters, 'path' where generated DSP application (*.out file) is located and 'sampleTime' parameter which allows to run DSP application with different model sample rate. When 'sampleTime' parameter is -1, DSP application will be executed with model sample rate defined in Xcos model, if different value provided Xcos model sample time will be overwritten. 
	</para>
	<para>Function loads Ext and Standalone mode DSP applications.</para>
	<para>
	After DSP application is started (in Ext mode) it starts to send data to host and Scilab script can receive data with mdaqDSPSignalRead() function.
	</para>

    <title>Calling Sequence</title>
    <synopsis>
      mdaqDSPStart(path, sampleTime);
	  mdaqDSPStart(linkID, path, sampleTime);
    </synopsis>
  </refsynopsisdiv>
  <refsection id="Parameters___FUNC_NAME__">
    <title>Arguments</title>
    <itemizedlist>
	    <listitem><para><emphasis role="bold">linkID: </emphasis> Valid connection link id (optional)</para></listitem>
	    <listitem><para><emphasis role="bold">path : </emphasis> DSP application path</para></listitem>
	    <listitem><para><emphasis role="bold">sampleTime: </emphasis> DSP application sample rate (in seconds)</para></listitem>
    </itemizedlist>
  </refsection>
    	<refsection>
	<title>Example</title>
          <programlisting role="example"><![CDATA[
// Script execution duration in seconds
TIME = 20;

// Model execution frequency in Hertz
FREQ = 5000;

// Build DSP binary from Xcos model
mdaqDSPBuild(mdaqToolboxPath() + filesep() + "examples" + filesep() +"fft_demo.zcos");

// Start DSP application
mdaqDSPStart('fft_demo_scig\fft_demo.out', 1.0/FREQ);

first_time = 1;
a = []; s = [];

// Process data from DSP
sample_count = FREQ/10;
fig = figure("Figure_name","MicroDAQ FFT demo");

for i=1:(TIME*10)
    s = mdaqDSPSignalRead(1, 1, sample_count, 1000);
   
    N=size(s,'*');  //number of samples
    s = s - mean(s);//cut DC
    y=fft(s');

    f= FREQ*(0:(N/10))/N; //associated frequency vector
    n=size(f,'*');

    if is_handle_valid(fig) then
        if first_time == 1 then
            clf();
            plot(f,abs(y(1:n)));
            title("FFT", "fontsize", 3);
            xlabel("frequency [Hz]","fontsize", 3);
            first_time = 0;
            a = gca();
        else
            a.children.children.data(:,2) = abs(y(1:n))';
        end
    else
        break;
    end
end

// Stop DSP execution
mdaqDSPStop();

// Close plot
mprintf("\nFFT demo has been stopped.");
if is_handle_valid(fig) then
    close(fig);
end
 ]]></programlisting>
 </refsection>
 
  <refsection id="SeeAlso___FUNC_NAME__">
    <title>See Also</title>
    <simplelist type="inline">
	  <member><link linkend="mdaqDSPBuild">mdaqDSPBuild</link> : Builds DSP application from provided Xcos model </member>
	  <member><link linkend="mdaqDSPStop">mdaqDSPStop</link> : Terminate DSP execution </member>
	  <member><link linkend="mdaqDSPSignalRead">mdaqDSPSignalRead</link> : Read DSP signal data </member>
      <member>
        <link type="scilab" linkend="scilab.help/sum">Link to the Scilab help page</link>
      </member>
    </simplelist>
  </refsection>
</refentry>
